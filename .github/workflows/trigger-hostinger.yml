name: CI + Trigger Hostinger Deploy

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Quick checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install deps (fast)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
      - name: Smoke (no-op placeholder)
        run: |
          echo "No automated tests configured; skipping."

  trigger-deploy:
    name: Trigger Hostinger Deploy
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Hostinger deploy webhook
        env:
          DEPLOY_URL: ${{ secrets.HOSTINGER_DEPLOY_URL }}
        run: |
          # Fallback URL (public webhook link provided by user)
          FALLBACK_URL="https://webhooks.hostinger.com/deploy/2f34fb6a152a242966e00349646a71a9"

          # Use secret if available, otherwise use the fallback
          if [ -z "$DEPLOY_URL" ]; then
            echo "HOSTINGER_DEPLOY_URL secret is not set; using provided fallback webhook URL"
            DEPLOY_URL="$FALLBACK_URL"
          fi

          echo "Triggering Hostinger deploy to $DEPLOY_URL"
          # Hostinger's webhook expects form-encoded payload (application/x-www-form-urlencoded)
          # Send the ref as form data and capture full response and HTTP status for debugging
          TMP_RESP=$(mktemp)
          HTTP_CODE=$(curl -s -o "$TMP_RESP" -w "%{http_code}" -X POST "$DEPLOY_URL" -H "Content-Type: application/x-www-form-urlencoded" --data-urlencode "ref=refs/heads/main")
          BODY=$(cat "$TMP_RESP" 2>/dev/null || true)
          echo "HTTP $HTTP_CODE"
          echo "Response body:"
          echo "$BODY"
          rm -f "$TMP_RESP"
          if [ "$HTTP_CODE" -ge 400 ]; then
            echo "Deploy webhook returned $HTTP_CODE"
            exit 22
          fi
          echo "Webhook POSTed"
